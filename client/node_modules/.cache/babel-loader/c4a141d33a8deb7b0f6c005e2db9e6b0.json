{"ast":null,"code":"var _jsxFileName = \"/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      artists: [],\n      // just artists\n      artistAlbums: [],\n      // albums grouped by artist\n      userDataReceived: false // used to control rendering\n\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      spotifyWebApi.getFollowedArtists({\n        limit: 15\n      }).then(response => {\n        // waits for artists followed\n        this.setState({\n          artists: response.artists.items\n        });\n        return response.artists.items.map(artist => {\n          return artist.id;\n        });\n      }).then(artistIds => {\n        // waits for artist id array\n        const artistAlbums = artistIds.map(artistId => {\n          return spotifyWebApi.getArtistAlbums(artistId, {\n            limit: 10\n          });\n        });\n        return Promise.all(artistAlbums); // this resolves the promise for each album request\n      }).then(albums => {\n        console.log(albums);\n        this.setState({\n          artistAlbums: albums,\n          userDataReceived: true\n        });\n      });\n    }\n  }\n\n  getHashParams() {\n    // provided by jmperez\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    //const artistsFollowed = this.state.artists;\n    const artists = this.state.artists;\n    const albums = this.state.artistAlbums;\n    const artistList = albums.map((catalog, i) => {\n      console.log(catalog);\n      const albums = catalog.items.map(album => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }\n        }, album.name);\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: artists[i].id,\n        style: {\n          border: '3px solid black',\n          margin: '4px',\n          padding: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, artists[i].name), /*#__PURE__*/React.createElement(\"ol\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, albums));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, \"Login to Spotify\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, artistList));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/App.js"],"names":["React","Component","Spotify","spotifyWebApi","App","constructor","props","params","getHashParams","state","loggedIn","access_token","artists","artistAlbums","userDataReceived","setAccessToken","componentDidMount","getFollowedArtists","limit","then","response","setState","items","map","artist","id","artistIds","artistId","getArtistAlbums","Promise","all","albums","console","log","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","artistList","catalog","i","album","name","border","margin","padding"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js'\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n\n    this.state = {\n        loggedIn : params.access_token ? true : false,\n        artists : [], // just artists\n        artistAlbums : [], // albums grouped by artist\n        userDataReceived : false // used to control rendering\n    }\n\n    if (params.access_token) {\n        spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n  }\n\n  componentDidMount() {\n      if (this.state.loggedIn) {\n          spotifyWebApi.getFollowedArtists({limit:15})\n          .then((response) => { // waits for artists followed\n              this.setState({\n                  artists : response.artists.items\n              });\n              return response.artists.items.map((artist) => {return artist.id});\n          })\n          .then((artistIds) => { // waits for artist id array\n              const artistAlbums = artistIds.map((artistId) => {\n                  return spotifyWebApi.getArtistAlbums(artistId, {limit:10});\n              });\n              return Promise.all(artistAlbums); // this resolves the promise for each album request\n          })\n          .then((albums) => {\n              console.log(albums);\n              this.setState({\n                  artistAlbums: albums,\n                  userDataReceived : true\n              });\n          });\n      }\n  }\n\n  getHashParams() { // provided by jmperez\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  render() {\n      //const artistsFollowed = this.state.artists;\n\n    const artists = this.state.artists;\n    const albums = this.state.artistAlbums;\n    const artistList = albums.map((catalog, i) => {\n        console.log(catalog);\n        const albums = catalog.items.map((album) => {\n            return <div>{album.name}</div>\n        })\n\n        return (\n            <div key={artists[i].id} style={{\n            border:'3px solid black',\n            margin: '4px',\n            padding: '5px'\n            }}>\n                <b>{artists[i].name}</b>\n                <ol>\n                    {albums}\n                </ol>\n            </div>)\n    });\n\n      return (\n        <div className=\"App\">\n          <a href=\"http://localhost:8888\">\n            <button>Login to Spotify</button>\n          </a>\n          <div>\n              {artistList}\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}