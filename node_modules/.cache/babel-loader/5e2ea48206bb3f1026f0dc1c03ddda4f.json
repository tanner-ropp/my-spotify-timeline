{"ast":null,"code":"var _jsxFileName = \"/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nimport ReleaseCard from './components/ReleaseCard.js';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nconst spotifyWebApi = new Spotify(); //const calendar = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n//const today = new Date();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      artists: [],\n      // just artists\n      //artistAlbums : [], // albums grouped by artist,\n      artistReleases: [],\n      //loadedReleases : [],\n      userDataReceived: false,\n      // used to control rendering,\n      displayName: \"\",\n      profileImage: \"\" //hasMore: true\n\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    console.log(\"constructor\");\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      spotifyWebApi.getMe().then(response => {\n        this.setState({\n          displayName: response.display_name,\n          profileImage: response.images[0].url\n        });\n      });\n      spotifyWebApi.getFollowedArtists({\n        limit: 50\n      }) // WHAT IF YOU HAVE MORE THAN 50 FOLLOWED ARTISTS?\n      .then(response => {\n        // waits for artists followed\n        this.setState({\n          artists: response.artists.items\n        });\n        return response.artists.items.map(artist => {\n          return {\n            name: artist.name,\n            id: artist.id\n          };\n        });\n      }).then(artists => {\n        // waits for artist id array\n        const artistAlbums = artists.map(artist => {\n          return spotifyWebApi.getArtistAlbums(artist.id, {\n            limit: 50,\n            country: 'US',\n            include_groups: 'album,single'\n          }).then(albums => {\n            return albums.items;\n          });\n        });\n        return Promise.all(artistAlbums);\n      }).then(albums => {\n        const releases = albums.flat().sort((a, b) => a.release_date < b.release_date ? 1 : -1);\n        this.setState({\n          artistReleases: releases,\n          // hack for chrome functionality\n          //loadedReleases : releases.slice(0,10),\n          //artistAlbums: albums,\n          userDataReceived: true\n        });\n      });\n    }\n  }\n\n  fetchData() {\n    const oldLength = this.state.loadedReleases.length;\n    this.setState({\n      loadedReleases: this.state.loadedReleases.concat(this.state.artistReleases.slice(oldLength, oldLength + 10))\n    });\n    console.log(\"FETCH\");\n  }\n\n  getHashParams() {\n    // provided by jmperez\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    //const artistsFollowed = this.state.artists;\n    console.log(\"app rendered\");\n    const artistReleases = this.state.artistReleases;\n    const releaseList = artistReleases.map(release => {\n      return /*#__PURE__*/React.createElement(ReleaseCard, {\n        key: release.id,\n        releaseInfo: release,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"stickyHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header-brand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"My Music Timeline\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"INSERT NOW PLAYING SECTION\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"displayName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, this.state.displayName), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"imageCropper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.profileImage,\n      height: \"50px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 51\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, !this.state.loggedIn && /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        background: '#1DB954'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, \"Login to Spotify\")), releaseList));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/App.js"],"names":["React","Component","Spotify","ReleaseCard","InfiniteScroll","spotifyWebApi","App","constructor","props","params","getHashParams","state","loggedIn","access_token","artists","artistReleases","userDataReceived","displayName","profileImage","setAccessToken","console","log","fetchData","bind","componentDidMount","getMe","then","response","setState","display_name","images","url","getFollowedArtists","limit","items","map","artist","name","id","artistAlbums","getArtistAlbums","country","include_groups","albums","Promise","all","releases","flat","sort","a","b","release_date","oldLength","loadedReleases","length","concat","slice","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","releaseList","release","background"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js'\nimport ReleaseCard from './components/ReleaseCard.js'\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nconst spotifyWebApi = new Spotify();\n//const calendar = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n//const today = new Date();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n\n    this.state = {\n        loggedIn : params.access_token ? true : false,\n        artists : [], // just artists\n        //artistAlbums : [], // albums grouped by artist,\n        artistReleases : [],\n        //loadedReleases : [],\n        userDataReceived : false, // used to control rendering,\n        displayName: \"\",\n        profileImage: \"\",\n        //hasMore: true\n    }\n\n    if (params.access_token) {\n        spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n    console.log(\"constructor\");\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n      if (this.state.loggedIn) {\n          spotifyWebApi.getMe().then((response) => {this.setState({displayName: response.display_name, profileImage: response.images[0].url})})\n\n          spotifyWebApi.getFollowedArtists({limit:50}) // WHAT IF YOU HAVE MORE THAN 50 FOLLOWED ARTISTS?\n          .then((response) => { // waits for artists followed\n              this.setState({\n                  artists : response.artists.items\n              });\n              return response.artists.items.map((artist) => {return {name : artist.name, id : artist.id}});\n          })\n          .then((artists) => { // waits for artist id array\n              const artistAlbums = artists.map((artist) => {\n                  return spotifyWebApi.getArtistAlbums(artist.id, {limit:50, country:'US', include_groups: 'album,single'})\n                  .then((albums) => {\n                      return (albums.items);\n                  })\n              });\n              return Promise.all(artistAlbums);\n          })\n          .then((albums) => {\n              const releases = albums.flat().sort((a,b) => a.release_date < b.release_date ? 1 : -1);\n              this.setState({\n                  artistReleases : releases, // hack for chrome functionality\n                  //loadedReleases : releases.slice(0,10),\n                  //artistAlbums: albums,\n                  userDataReceived : true\n              });\n          });\n      }\n  }\n\n  fetchData() {\n      const oldLength = this.state.loadedReleases.length;\n      this.setState({\n          loadedReleases : this.state.loadedReleases.concat(this.state.artistReleases.slice(oldLength, oldLength + 10))\n      })\n      console.log(\"FETCH\");\n  }\n\n  getHashParams() { // provided by jmperez\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  render() {\n      //const artistsFollowed = this.state.artists;\n      console.log(\"app rendered\");\n\n    const artistReleases = this.state.artistReleases;\n    const releaseList = artistReleases.map((release)=> {\n        return (\n            <ReleaseCard key={release.id} releaseInfo={release}/>\n        );\n    })\n\n      return (\n        <div className=\"App\">\n            <header className=\"stickyHeader\">\n                <h1 className=\"header-brand\">My Music Timeline</h1>\n                <div>INSERT NOW PLAYING SECTION</div>\n                <div className=\"header-profile\">\n                    <div className=\"displayName\">{this.state.displayName}</div>\n                    <div className=\"imageCropper\"><img src={this.state.profileImage} height=\"50px\"/></div>\n                </div>\n            </header>\n            <div className=\"body\">\n                {!this.state.loggedIn &&\n                    <a href=\"http://localhost:8888\">\n                        <button style={{background: '#1DB954'}}>Login to Spotify</button>\n                    </a>\n                }\n                {/*<InfiniteScroll\n                  dataLength={this.state.loadedReleases.length} //This is important field to render the next data\n                  next={this.fetchData}\n                  hasMore={this.state.hasMore}\n                  loader={<h4>Loading...</h4>}\n                  endMessage={\n                    <p style={{textAlign: 'center'}}>\n                      <b>Yay! You have seen it all</b>\n                    </p>\n                  }>\n                  {releaseList}\n                </InfiniteScroll>*/}\n                {releaseList}\n            </div>\n        </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}