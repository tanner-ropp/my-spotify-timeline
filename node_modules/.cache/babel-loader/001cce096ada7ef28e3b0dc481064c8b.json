{"ast":null,"code":"var _jsxFileName = \"/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/components/ReleaseCard.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\nconst calendar = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nclass ReleaseCard extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const artistReleases = this.state.artistReleases;\n    const releaseList = artistReleases.map(release => {\n      const releaseDate = new Date(release.release_date);\n      var displayedDate = '';\n\n      if (releaseDate.getFullYear() == today.getFullYear()) {\n        displayedDate = displayedDate.concat(calendar[releaseDate.getMonth()]);\n        displayedDate = displayedDate.concat(' ' + releaseDate.getDate() + ', ');\n      }\n\n      displayedDate = displayedDate.concat(releaseDate.getFullYear());\n      const tracks = [];\n      spotifyWebApi.getAlbum(release.id).then(fullRelease => {\n        tracks.push(fullRelease.tracks.items);\n        console.log(tracks);\n      });\n      console.log(tracks);\n      const trackList = tracks.map(track => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }\n        }, \"hi\");\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: release.id,\n        className: \"release-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: release.images[0].url,\n        height: \"200\",\n        onClick: () => spotifyWebApi.play({\n          context_uri: release.uri\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 22\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"release-card-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, displayedDate), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, release.name), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \"by \", release.artists[0].name)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"release-playbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, trackList));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: release.id,\n      className: \"release-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: release.images[0].url,\n      height: \"200\",\n      onClick: () => spotifyWebApi.play({\n        context_uri: release.uri\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"release-card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, displayedDate), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, release.name), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"by \", release.artists[0].name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"release-playbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, trackList));\n  }\n\n}\n\nexport default ReleaseCard;","map":{"version":3,"sources":["/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/components/ReleaseCard.js"],"names":["React","Component","Spotify","spotifyWebApi","calendar","ReleaseCard","constructor","props","componentDidMount","render","artistReleases","state","releaseList","map","release","releaseDate","Date","release_date","displayedDate","getFullYear","today","concat","getMonth","getDate","tracks","getAlbum","id","then","fullRelease","push","items","console","log","trackList","track","images","url","play","context_uri","uri","name","artists"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Spotify from 'spotify-web-api-js'\n\n\nconst spotifyWebApi = new Spotify();\nconst calendar = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nclass ReleaseCard extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const artistReleases = this.state.artistReleases;\n    const releaseList = artistReleases.map((release)=> {\n        const releaseDate = new Date(release.release_date);\n\n        var displayedDate = '';\n        if (releaseDate.getFullYear() == today.getFullYear()) {\n            displayedDate = displayedDate.concat(calendar[releaseDate.getMonth()]);\n            displayedDate = displayedDate.concat(' ' + releaseDate.getDate() + ', ');\n        }\n        displayedDate = displayedDate.concat(releaseDate.getFullYear());\n\n        const tracks = [];\n        spotifyWebApi.getAlbum(release.id)\n        .then((fullRelease) => {\n            tracks.push(fullRelease.tracks.items);\n            console.log(tracks);\n        });\n\n        console.log(tracks);\n\n\n\n\n\n        const trackList = tracks.map((track) => {\n            return (\n                <div>hi</div>\n            );\n        })\n\n        return (\n            <div key={release.id} className=\"release-card\">\n                <div><img src={release.images[0].url} height=\"200\" onClick={() => spotifyWebApi.play({context_uri : release.uri})}></img></div>\n                <div className=\"release-card-body\">\n                    <div>{displayedDate}</div>\n                    <h2>{release.name}</h2>\n                    <h3>by {release.artists[0].name}</h3>\n                </div>\n                <div className=\"release-playbar\">{trackList}</div>\n            </div>\n\n        )\n    })\n\n      return (\n          <div key={release.id} className=\"release-card\">\n              <div><img src={release.images[0].url} height=\"200\" onClick={() => spotifyWebApi.play({context_uri : release.uri})}></img></div>\n              <div className=\"release-card-body\">\n                  <div>{displayedDate}</div>\n                  <h2>{release.name}</h2>\n                  <h3>by {release.artists[0].name}</h3>\n              </div>\n              <div className=\"release-playbar\">{trackList}</div>\n          </div>\n      );\n  }\n}\n\nexport default ReleaseCard;\n"]},"metadata":{},"sourceType":"module"}