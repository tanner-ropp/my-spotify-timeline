{"ast":null,"code":"var _jsxFileName = \"/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      artists: []\n    };\n\n    if (params.access_token) {\n      spotifyWebApi.setAccessToken(params.access_token);\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.loggedIn) {\n      var promises = [];\n      spotifyWebApi.getFollowedArtists({\n        limit: 15\n      }).then(response => {\n        this.setState({\n          artists: response.artists.items\n        });\n        return response.artists.items.map(artist => {\n          return artist.id;\n        });\n      }).then(artistIds => {\n        const artistAlbums = artistIds.map(artistId => {\n          return spotifyWebApi.getArtistAlbums(artistId);\n        });\n        return Promise.all(artistAlbums);\n      }).then(albums => {\n        console.log(albums);\n      });\n      /*spotifyWebApi.getFollowedArtists({limit:15})\n      .then((response) => {\n          this.setState({\n              artists : response.artists.items\n          });\n          console.log(response.artists);\n          console.log(\"HELLO\");\n          return response.artists.items.map((artist) => {\n              return spotifyWebApi.getArtistAlbums(artist.id);\n          });\n      })*/\n    }\n  }\n\n  getHashParams() {\n    // provided by jmperez\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n\n    while (e = r.exec(q)) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n\n    return hashParams;\n  }\n\n  render() {\n    //const artistsFollowed = this.state.artists;\n    const artists = this.state.artists;\n    const artistList = artists.map(artist => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: artist.id,\n        style: {\n          border: '3px solid black',\n          margin: '4px',\n          padding: '5px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, artist.name);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Login to Spotify\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, artistList));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/App.js"],"names":["React","Component","Spotify","spotifyWebApi","App","constructor","props","params","getHashParams","state","loggedIn","access_token","artists","setAccessToken","componentDidMount","promises","getFollowedArtists","limit","then","response","setState","items","map","artist","id","artistIds","artistAlbums","artistId","getArtistAlbums","Promise","all","albums","console","log","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","render","artistList","border","margin","padding","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Spotify from 'spotify-web-api-js'\n\nconst spotifyWebApi = new Spotify();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const params = this.getHashParams();\n\n    this.state = {\n        loggedIn : params.access_token ? true : false,\n        artists : []\n    }\n\n    if (params.access_token) {\n        spotifyWebApi.setAccessToken(params.access_token);\n    }\n\n  }\n\n  componentDidMount() {\n      if (this.state.loggedIn) {\n          var promises = []\n\n          spotifyWebApi.getFollowedArtists({limit:15})\n          .then((response) => {\n              this.setState({\n                  artists : response.artists.items\n              });\n              return response.artists.items.map((artist) => {return artist.id});\n          })\n          .then((artistIds) => {\n              const artistAlbums = artistIds.map((artistId) => {\n                  return spotifyWebApi.getArtistAlbums(artistId);\n              });\n              return Promise.all(artistAlbums);\n          })\n          .then((albums) => {\n              console.log(albums);\n          })\n\n          /*spotifyWebApi.getFollowedArtists({limit:15})\n          .then((response) => {\n              this.setState({\n                  artists : response.artists.items\n              });\n              console.log(response.artists);\n              console.log(\"HELLO\");\n              return response.artists.items.map((artist) => {\n                  return spotifyWebApi.getArtistAlbums(artist.id);\n              });\n          })*/\n      }\n  }\n\n  getHashParams() { // provided by jmperez\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while ( e = r.exec(q)) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n  }\n\n  render() {\n      //const artistsFollowed = this.state.artists;\n\n    const artists = this.state.artists;\n    const artistList = artists.map(artist => {\n        return (\n            <div key={artist.id} style={{\n            border:'3px solid black',\n            margin: '4px',\n            padding: '5px'\n            }}>\n                {artist.name}\n            </div>)\n    });\n\n      return (\n        <div className=\"App\">\n          <a href=\"http://localhost:8888\">\n            <button>Login to Spotify</button>\n          </a>\n          <div>\n              {artistList}\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}