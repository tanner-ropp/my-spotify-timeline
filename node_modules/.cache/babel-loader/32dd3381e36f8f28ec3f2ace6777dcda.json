{"ast":null,"code":"var _jsxFileName = \"/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/components/ReleaseCard.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nconst spotifyWebApi = new Spotify();\nconst calendar = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst today = new Date();\n\nclass ReleaseCard extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const release = this.props.releaseInfo;\n    const tracks = this.props.trackList;\n    /*const artistReleases = this.state.artistReleases;\n    const releaseList = artistReleases.map((release)=> {\n        const releaseDate = new Date(release.release_date);\n         var displayedDate = '';\n        if (releaseDate.getFullYear() == today.getFullYear()) {\n            displayedDate = displayedDate.concat(calendar[releaseDate.getMonth()]);\n            displayedDate = displayedDate.concat(' ' + releaseDate.getDate() + ', ');\n        }\n        displayedDate = displayedDate.concat(releaseDate.getFullYear());\n         const tracks = [];\n        spotifyWebApi.getAlbum(release.id)\n        .then((fullRelease) => {\n            tracks.push(fullRelease.tracks.items);\n            console.log(tracks);\n        });\n         console.log(tracks);\n    \n        const trackList = tracks.map((track) => {\n            return (\n                <div>hi</div>\n            );\n        })\n         return (\n            <div key={release.id} className=\"release-card\">\n                <div><img src={release.images[0].url} height=\"200\" onClick={() => spotifyWebApi.play({context_uri : release.uri})}></img></div>\n                <div className=\"release-card-body\">\n                    <div>{displayedDate}</div>\n                    <h2>{release.name}</h2>\n                    <h3>by {release.artists[0].name}</h3>\n                </div>\n                <div className=\"release-playbar\">{trackList}</div>\n            </div>\n         )\n    })*/\n\n    const releaseDate = new Date(release.release_date);\n    var displayedDate = '';\n\n    if (releaseDate.getFullYear() == today.getFullYear()) {\n      displayedDate = displayedDate.concat(calendar[releaseDate.getMonth()]);\n      displayedDate = displayedDate.concat(' ' + releaseDate.getDate() + ', ');\n    }\n\n    displayedDate = displayedDate.concat(releaseDate.getFullYear());\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: release.id,\n      className: \"release-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: release.images[0].url,\n      height: \"200\",\n      onClick: () => spotifyWebApi.play({\n        context_uri: release.uri\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"release-card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, displayedDate), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, release.name), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, \"by \", release.artists[0].name)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"release-playbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, trackList));\n  }\n\n}\n\nexport default ReleaseCard;","map":{"version":3,"sources":["/Users/twropp/Desktop/Summer-Projects/spotify-timeline-app/client/src/components/ReleaseCard.js"],"names":["React","Component","Spotify","spotifyWebApi","calendar","today","Date","ReleaseCard","constructor","props","componentDidMount","render","release","releaseInfo","tracks","trackList","releaseDate","release_date","displayedDate","getFullYear","concat","getMonth","getDate","id","images","url","play","context_uri","uri","name","artists"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAGA,MAAMC,aAAa,GAAG,IAAID,OAAJ,EAAtB;AACA,MAAME,QAAQ,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAjB;AACA,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAClCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAED;;AAEDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,KAAKH,KAAL,CAAWI,WAA3B;AACA,UAAMC,MAAM,GAAG,KAAKL,KAAL,CAAWM,SAA1B;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,UAAMC,WAAW,GAAG,IAAIV,IAAJ,CAASM,OAAO,CAACK,YAAjB,CAApB;AAEA,QAAIC,aAAa,GAAG,EAApB;;AACA,QAAIF,WAAW,CAACG,WAAZ,MAA6Bd,KAAK,CAACc,WAAN,EAAjC,EAAsD;AAClDD,MAAAA,aAAa,GAAGA,aAAa,CAACE,MAAd,CAAqBhB,QAAQ,CAACY,WAAW,CAACK,QAAZ,EAAD,CAA7B,CAAhB;AACAH,MAAAA,aAAa,GAAGA,aAAa,CAACE,MAAd,CAAqB,MAAMJ,WAAW,CAACM,OAAZ,EAAN,GAA8B,IAAnD,CAAhB;AACH;;AACDJ,IAAAA,aAAa,GAAGA,aAAa,CAACE,MAAd,CAAqBJ,WAAW,CAACG,WAAZ,EAArB,CAAhB;AAEE,wBACI;AAAK,MAAA,GAAG,EAAEP,OAAO,CAACW,EAAlB;AAAsB,MAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAK;AAAK,MAAA,GAAG,EAAEX,OAAO,CAACY,MAAR,CAAe,CAAf,EAAkBC,GAA5B;AAAiC,MAAA,MAAM,EAAC,KAAxC;AAA8C,MAAA,OAAO,EAAE,MAAMtB,aAAa,CAACuB,IAAd,CAAmB;AAACC,QAAAA,WAAW,EAAGf,OAAO,CAACgB;AAAvB,OAAnB,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAL,CADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMV,aAAN,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,OAAO,CAACiB,IAAb,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQjB,OAAO,CAACkB,OAAR,CAAgB,CAAhB,EAAmBD,IAA3B,CAHJ,CAFJ,eAOI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCd,SAAlC,CAPJ,CADJ;AAWH;;AA3EiC;;AA8EpC,eAAeR,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport Spotify from 'spotify-web-api-js'\n\n\nconst spotifyWebApi = new Spotify();\nconst calendar = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst today = new Date();\n\nclass ReleaseCard extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const release = this.props.releaseInfo;\n    const tracks = this.props.trackList;\n    /*const artistReleases = this.state.artistReleases;\n    const releaseList = artistReleases.map((release)=> {\n        const releaseDate = new Date(release.release_date);\n\n        var displayedDate = '';\n        if (releaseDate.getFullYear() == today.getFullYear()) {\n            displayedDate = displayedDate.concat(calendar[releaseDate.getMonth()]);\n            displayedDate = displayedDate.concat(' ' + releaseDate.getDate() + ', ');\n        }\n        displayedDate = displayedDate.concat(releaseDate.getFullYear());\n\n        const tracks = [];\n        spotifyWebApi.getAlbum(release.id)\n        .then((fullRelease) => {\n            tracks.push(fullRelease.tracks.items);\n            console.log(tracks);\n        });\n\n        console.log(tracks);\n\n\n\n\n\n        const trackList = tracks.map((track) => {\n            return (\n                <div>hi</div>\n            );\n        })\n\n        return (\n            <div key={release.id} className=\"release-card\">\n                <div><img src={release.images[0].url} height=\"200\" onClick={() => spotifyWebApi.play({context_uri : release.uri})}></img></div>\n                <div className=\"release-card-body\">\n                    <div>{displayedDate}</div>\n                    <h2>{release.name}</h2>\n                    <h3>by {release.artists[0].name}</h3>\n                </div>\n                <div className=\"release-playbar\">{trackList}</div>\n            </div>\n\n        )\n    })*/\n    const releaseDate = new Date(release.release_date);\n\n    var displayedDate = '';\n    if (releaseDate.getFullYear() == today.getFullYear()) {\n        displayedDate = displayedDate.concat(calendar[releaseDate.getMonth()]);\n        displayedDate = displayedDate.concat(' ' + releaseDate.getDate() + ', ');\n    }\n    displayedDate = displayedDate.concat(releaseDate.getFullYear());\n\n      return (\n          <div key={release.id} className=\"release-card\">\n              <div><img src={release.images[0].url} height=\"200\" onClick={() => spotifyWebApi.play({context_uri : release.uri})}></img></div>\n              <div className=\"release-card-body\">\n                  <div>{displayedDate}</div>\n                  <h2>{release.name}</h2>\n                  <h3>by {release.artists[0].name}</h3>\n              </div>\n              <div className=\"release-playbar\">{trackList}</div>\n          </div>\n      );\n  }\n}\n\nexport default ReleaseCard;\n"]},"metadata":{},"sourceType":"module"}